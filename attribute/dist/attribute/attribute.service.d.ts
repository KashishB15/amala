import { CreateAttributeDto } from './dto/create-attribute.dto';
import { UpdateAttributeDto } from './dto/update-attribute.dto';
import { Repository } from 'typeorm';
import { Attribute } from './entities/attribute.entity';
import { CreateAttributeSetDto } from './dto/create-attribute-set.dto';
import { AttributeSet } from './entities/attribute_set.entity';
import { AssignedAttribute } from './entities/assigned-attribute.entity';
import { CreateAttributeTypeDto } from './dto/create-attribute-type.dto';
import { AttributeType } from './entities/attribute-type.entity';
import { AttributeOption } from './entities/attribute-option.entity';
import { CreateAttributeOptionDto } from './dto/create-attribute-option.dto';
import { UpdateAttributeSetDto } from './dto/update-attribute-set.dto';
export declare class AttributeService {
    private attributeRepository;
    private attributeSetRepository;
    private assignedAttributeRepository;
    private attributeTypeRepository;
    private attributeOptionRepository;
    constructor(attributeRepository: Repository<Attribute>, attributeSetRepository: Repository<AttributeSet>, assignedAttributeRepository: Repository<AssignedAttribute>, attributeTypeRepository: Repository<AttributeType>, attributeOptionRepository: Repository<AttributeOption>);
    createAttribute(attributeInfo: CreateAttributeDto, res: any): Promise<any>;
    createAttributeType(attributeType: CreateAttributeTypeDto, res: any): Promise<any>;
    getAttributeTypes(res: any): Promise<any>;
    getAttributeOptions(attribute_id: number, res: any): Promise<any>;
    getAttributeOptionsForAttributeIds(attribute_ids: number[], res: any): Promise<any>;
    createAttributeSet(attributeSet: CreateAttributeSetDto, res: any): Promise<any>;
    assignAttribute(attribute_ids: number[], attribute_set_id: number, position: number, res: any): Promise<any>;
    unassignAttribute(attribute_ids: number[], attribute_set_id: number, res: any): Promise<any>;
    getSingleAttribute(filter: any): Promise<Attribute>;
    getAttributeTypeByName(name: string): Promise<AttributeType>;
    getAttributeSetByName(name: string): Promise<AttributeSet>;
    getAssignedAttribute(attribute_id: number, attribute_set_id: number): Promise<AssignedAttribute>;
    getMaxPositionValue(repository: any, tableName: string): Promise<any>;
    getAllAssignedAttributeByAttributeSet(attribute_set_id: number, res: any): Promise<any>;
    getAllUnassignedAttribute(attribute_set_id: number, res: any): Promise<any>;
    updateAttribute(attribute: UpdateAttributeDto, res: any): Promise<any>;
    updateAttributeSet(attributeSet: UpdateAttributeSetDto, res: any): Promise<any>;
    getAttributeList(attributeFilterInfo: any, res: any): Promise<any>;
    getAttributeSetList(attributeSetFilterInfo: any, res: any): Promise<any>;
    deleteAttribute(id: number, res: any): Promise<any>;
    createAttributeOption(attributeOption: CreateAttributeOptionDto, res: any): Promise<any>;
    deleteAttributeSet(attributeSetId: number, res: any): Promise<any>;
}
